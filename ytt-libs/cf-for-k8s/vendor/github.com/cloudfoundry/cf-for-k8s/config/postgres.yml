#@ load("@ytt:assert", "assert")
#@ load("@ytt:base64", "base64")
#@ load("@ytt:data", "data")
#@ load("@ytt:library", "library")
#@ load("@ytt:overlay", "overlay")
#@ load("@ytt:template", "template")

#@ def add_cf_db_namespace():
#@overlay/match by=overlay.all, expects="1+"
---
metadata:
  #@overlay/match missing_ok=True
  namespace: cf-db
#@ end

---
apiVersion: v1
kind: Namespace
metadata:
  name: cf-db
---
apiVersion: v1
kind: Secret
metadata:
  name: cf-db-admin-secret
  namespace: cf-db
data:
  #@ if len(data.values.cf_db.admin_password) == 0:
  #@  assert.fail("cf_db.admin_password cannot be empty")
  #@ end
  postgresql-password: #@ base64.encode(data.values.cf_db.admin_password)

#@overlay/match by=overlay.subset({"kind": "StatefulSet", "metadata":{"name":"cf-db-postgresql"}})
---
spec:
  template:
    spec:
      #@overlay/replace
      initContainers: []

#@overlay/match by=overlay.subset({"kind": "ConfigMap", "metadata":{"name":"cf-db-postgresql-init-scripts"}})
---
#@ ccdb = data.values.capi.database
#@ uaadb = data.values.uaa.database
#@yaml/text-templated-strings
data:
  #@overlay/match missing_ok=True
  setup_db.sql: |
    CREATE DATABASE (@= ccdb.name @);
    CREATE ROLE (@= ccdb.user @) LOGIN PASSWORD '(@= ccdb.password @)';
    CREATE DATABASE (@= uaadb.name @);
    CREATE ROLE (@= uaadb.user @) LOGIN PASSWORD '(@= uaadb.password @)';
  init.sh: |
    #!/bin/bash
    psql -U postgres -f /docker-entrypoint-initdb.d/setup_db.sql
    psql -U postgres -d (@= ccdb.name @) -c "CREATE EXTENSION citext"
    psql -U postgres -d (@= uaadb.name @) -c "CREATE EXTENSION citext"

--- #@ template.replace(overlay.apply(library.get("postgres").eval(), add_cf_db_namespace()))
--- #! explanation: the capi-db's sidecar needs to accept plain text connections from capi's init container.
    #! see https://github.com/cloudfoundry/capi-k8s-release/issues/12
apiVersion: "authentication.istio.io/v1alpha1"
kind: "Policy"
metadata:
  name: "cf-db-allow-plaintext"
  namespace: "cf-db"
spec:
  targets:
  - name: cf-db-postgresql
  - name: cf-db-postgresql-headless
  peers:
  - mtls:
      mode: PERMISSIVE

